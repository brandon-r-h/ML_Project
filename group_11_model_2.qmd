---
title: "MODEL 2"
author: "RUBY THOMPSON"
date: "04/07/2025"

format: 
  html:
    theme: spacelab  
    mainfont: verdana
    highlight-style: github
    title-block-banner: true
    embed-resources: true
---

**Goal** 
This is a binary classification assignment

- Engineering exactly 5 features.
- Predict Churn

**Setup**
- You may use any libraries, but as a feature engineering assignment tidyverse may be sufficient.
- The next most likely are dummy column and textual libraries.
- If you wish, you may use Python, Julia, or Observable in any manner you see fit and I will figure out how to assess it.
For assessment, we will use “caret”.

```{r}
library(tidyverse)
library(caret)
```

**Dataframe** 
```{r}
bank <- readRDS(gzcon(url("https://cd-public.github.io/D505/dat/BankChurners.rds")))
head(bank)
```

**Exploration**

```{r}

bank = bank %>%
  mutate(
    across(where(is.numeric), ~ as.numeric(scale(.x))),
    Income_Category = factor(
      Income_Category,
      levels = c("Less than $40K", "$40K - $60K", "$60K - $80K", "$80K - $120K", "$120K +", "Unknown"),
      ordered = TRUE
    ),
    Education_Level = factor(
      Education_Level,
      levels = c("Uneducated", "High School", "College", "Graduate", "Post-Graduate", "Doctorate", "Unknown"),
      ordered = TRUE
    )
  )

for (i in names(bank)) {
  if (is.numeric(.data[i])) {
    bank %>%
      ggplot() +
      geom_histogram(aes(x = .data[[i]])) +
      facet_wrap(~Churn) +
      theme_minimal()+
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))-> p
  }
  else {
    bank %>%
      ggplot() +
      geom_bar(aes(x = .data[[i]])) +
      facet_wrap(~Churn) +
      theme_minimal()+
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))-> p
  }
  print(p)
}

# Low income individuals with high revolving balance -> don't churn
bank%>%
  ggplot()+
  geom_col(aes(x = Income_Category, y = Total_Revolving_Bal, color = Churn))+
  theme_minimal()+
  theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust = 1))

```

Things of note:
- Total_Relationship_Count: Non-churn group has much higher proportion of higher values
  - [DEF] the number of different types of products or services a customer has with a particular financial institution
- Total_Revolving_Bal: ^same
  - [DEF] sum of all the outstanding balances on all your credit cards
- Total_Trans_Amt: early spike in non-churn group
  - [DEF] sum of all individual transaction values
- Avg_Utilization_Ratio: much higher proportion of credit being utilized
  - [DEF] percentage of your available credit that you are currently using

We are looking for people with diverse investments in the bank, with a lot of outstanding credit debt, lower total transaction amounts, and high credit usage


- You will necessarily perform some feature engineering as you see fit.
Exactly five (5) features.

**Feature Engineering** 
```{r}
bank_temp = bank %>% mutate(
  # RUBY FEAT.
  low_cred_lim = if_else(Credit_Limit < 2000, 1, 0), # ~2000 works best
  inactive = if_else((Months_Inactive_12_mon >= 4), 1, 0),
  bank_relationships = if_else((Total_Relationship_Count >= 5), 1, 0), # best Kappa at 3
  
  # LANDON FEAT.
  engagment = Total_Relationship_Count + Total_Trans_Ct + Avg_Utilization_Ratio, # total services used + # of transactions + ratio of used credit
  per_transaction = Total_Trans_Amt / Total_Trans_Ct # amt spent per transaction
  
  ) %>% 
  select(Churn, low_cred_lim, inactive, engagment, per_transaction, bank_relationships)

head(bank_temp)

# feature grave yard: 
  # tenure = case_when(Months_on_book < 24 ~ "New", Months_on_book < 48 ~ "Established", TRUE ~ "Loyal")
  # churn_momentum = Total_Ct_Chng_Q4_Q1 * Total_Amt_Chng_Q4_Q1
  # low_income_credit_user = ifelse(Income_Category == "Less than $40K" & Avg_Utilization_Ratio > 0.9, 1, 0)
  # bank_relationships = if_else((Total_Relationship_Count >= 3), "high", "low"), # best Kappa at 3 <- backed by data
  # credit_use = Total_Trans_Amt / Credit_Limit, # this is already a column (Avg_Utilization_Ratio)
  # middle_age_women = ifelse(Customer_Age %in% c(50:60) & Gender == "F", 1, 0), # not helpful, based off of a study I found
  # tenure = if_else((Months_on_book <= 24), "new", "not new"), 
  # high_income = if_else(Income_Category %in% c("Less than $40K", "$40K - $60K"), 1, 0), 
  # avg_transaction = Total_Trans_Amt / Total_Trans_Ct, 
  # under25 = if_else((Customer_Age < 25), 1, 0) ---- not changing the Kappa much when I swap out the ages
  # tenure = if_else((Months_on_book <= 12), 1, 0) 
```


**Save the Dataframe** 
- In addition to a document like this, you will also need to submit your dataframe.
```{r}
write_rds(bank, file="model_2.rds")
```


**Assessment** 

```{r}
set.seed(505)

train(Churn ~ .,
      data = bank_temp |> select(1,2,3,4,5,grep("Churn", colnames(bank_temp))), 
      trControl = trainControl(method = "cv", number = 5),
      method = "glm",
      family = "binomial",
      maxit = 5)$results['Kappa']
```

Assessments will be evaluated as follows:
- Note that the first five (5) features are selected.
- This ensures no more than 5 features are used.
- It ensures “Churn” is included.
- It reports the value Kappa
